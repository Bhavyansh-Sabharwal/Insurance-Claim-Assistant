rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function hasCollaborationAccess(userId) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.collaborations[userId] != null;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && (isOwner(userId) || hasCollaborationAccess(userId));
      allow write: if isAuthenticated() && isOwner(userId);
    }

    // Collaborations collection
    match /collaborations/{collaborationId} {
      allow read: if isAuthenticated() && (
        resource.data.inviterId == request.auth.uid || 
        resource.data.inviteeEmail == request.auth.token.email
      );
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        resource.data.inviterId == request.auth.uid || 
        resource.data.inviteeEmail == request.auth.token.email
      );
      allow delete: if isAuthenticated() && resource.data.inviterId == request.auth.uid;
    }
  }
} 